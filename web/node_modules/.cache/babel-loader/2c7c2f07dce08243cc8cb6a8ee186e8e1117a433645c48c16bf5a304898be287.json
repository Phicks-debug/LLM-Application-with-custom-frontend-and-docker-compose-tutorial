{"ast":null,"code":"var _jsxFileName = \"/home/coder/my-docker-test/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [apiStatus, setApiStatus] = useState('unknown');\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        await axios.get('http://localhost:8000/');\n        console.log('API is online');\n        setApiStatus('online');\n      } catch (error) {\n        setApiStatus('offline');\n        console.error('API is offline:', error);\n      }\n    };\n    checkApiStatus();\n  }, []);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    if (apiStatus !== 'online') {\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        content: 'Error: API is not connected. Please try again later.'\n      }]);\n      return;\n    }\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`http://localhost:8000/chat?prompt=${encodeURIComponent(input)}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.message\n      };\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Sorry, an error occurred. Please try again.';\n      if (error.response) {\n        errorMessage = `Error: ${error.response.status} - ${error.response.data.detail || error.response.statusText}`;\n      } else if (error.request) {\n        errorMessage = 'Error: No response received from the server. Please check if the API is running.';\n      } else {\n        errorMessage = `Error: ${error.message}`;\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        content: errorMessage\n      }]);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LLM Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `api-status ${apiStatus}`,\n      children: [\"API Status: \", apiStatus === 'online' ? 'Connected' : 'Disconnected']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: \"Thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zt25GVXUTApGNbnzifC4tXAoCIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","apiStatus","setApiStatus","checkApiStatus","get","console","log","error","input","setInput","messages","setMessages","isLoading","setIsLoading","handleSubmit","e","prevMessages","role","content","preventDefault","trim","userMessage","response","encodeURIComponent","headers","assistantMessage","data","message","errorMessage","status","detail","statusText","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/coder/my-docker-test/web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [apiStatus, setApiStatus] = useState('unknown');\n\n  useEffect(() => {\n    const checkApiStatus = async () => {\n      try {\n        await axios.get('http://localhost:8000/');\n        console.log('API is online');\n        setApiStatus('online');\n      } catch (error) {\n        setApiStatus('offline');\n        console.error('API is offline:', error);\n      }\n    };\n    checkApiStatus();\n  }, []);\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    if (apiStatus !== 'online') {\n      setMessages((prevMessages) => [...prevMessages, { role: 'assistant', content: 'Error: API is not connected. Please try again later.' }]);\n      return;\n    }\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await axios.get(`http://localhost:8000/chat?prompt=${encodeURIComponent(input)}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n      });\n      const assistantMessage = { role: 'assistant', content: response.data.message };\n      setMessages((prevMessages) => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'Sorry, an error occurred. Please try again.';\n      if (error.response) {\n        errorMessage = `Error: ${error.response.status} - ${error.response.data.detail || error.response.statusText}`;\n      } else if (error.request) {\n        errorMessage = 'Error: No response received from the server. Please check if the API is running.';\n      } else {\n        errorMessage = `Error: ${error.message}`;\n      }\n      setMessages((prevMessages) => [...prevMessages, { role: 'assistant', content: errorMessage }]);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>LLM Chat Application</h1>\n      <div className={`api-status ${apiStatus}`}>\n        API Status: {apiStatus === 'online' ? 'Connected' : 'Disconnected'}\n      </div>\n      <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.role}`}>\n            {message.content}\n          </div>\n        ))}\n        {isLoading && <div className=\"message assistant\">Thinking...</div>}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message here...\"\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}