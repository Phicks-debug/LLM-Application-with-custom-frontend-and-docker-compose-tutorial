{"ast":null,"code":"var _jsxFileName = \"/home/coder/my-docker-test/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    const userMessage = {\n      role: 'user',\n      content: input\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n    try {\n      const response = await axios.post('localhost:8000/api/chat', {\n        message: input\n      });\n      const assistantMessage = {\n        role: 'assistant',\n        content: response.data.response\n      };\n      setMessages(prevMessages => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = {\n        role: 'assistant',\n        content: 'Sorry, an error occurred. Please try again.'\n      };\n      setMessages(prevMessages => [...prevMessages, errorMessage]);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LLM Chat Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role}`,\n        children: message.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message assistant\",\n        children: \"Thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BdToR+t/tuxeBy62+ToUPCVqmLs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","isLoading","setIsLoading","handleSubmit","e","preventDefault","trim","userMessage","role","content","prevMessages","response","post","message","assistantMessage","data","error","console","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onSubmit","type","value","onChange","target","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/coder/my-docker-test/web/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n\n    const userMessage = { role: 'user', content: input };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setInput('');\n    setIsLoading(true);\n\n    try {\n      const response = await axios.post('localhost:8000/api/chat', { message: input });\n      const assistantMessage = { role: 'assistant', content: response.data.response };\n      setMessages((prevMessages) => [...prevMessages, assistantMessage]);\n    } catch (error) {\n      console.error('Error:', error);\n      const errorMessage = { role: 'assistant', content: 'Sorry, an error occurred. Please try again.' };\n      setMessages((prevMessages) => [...prevMessages, errorMessage]);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>LLM Chat Application</h1>\n      <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={`message ${message.role}`}>\n            {message.content}\n          </div>\n        ))}\n        {isLoading && <div className=\"message assistant\">Thinking...</div>}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Type your message here...\"\n        />\n        <button type=\"submit\" disabled={isLoading}>\n          Send\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}